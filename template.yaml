AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless Order Processing System

Globals:
  Function:
    Timeout: 30
    MemorySize: 256

Resources:
  ###################################################
  # DynamoDB Tables
  ###################################################
  OrdersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: OrdersTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: OrderId
          AttributeType: S
      KeySchema:
        - AttributeName: OrderId
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  InventoryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: InventoryTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: ItemName
          AttributeType: S
      KeySchema:
        - AttributeName: ItemName
          KeyType: HASH

  ###################################################
  # SQS Queue
  ###################################################
  OrdersQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: OrdersQueue

  ###################################################
  # Order Submission (.NET 8)
  ###################################################
  OrderSubmissionFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: OrderSubmission
      CodeUri: ./OrderSubmission/
      Handler: OrderSubmission::OrderSubmission.OrderHandler::SubmitOrder
      Runtime: dotnet8
      Environment:
        Variables:
          ORDERS_TABLE: !Ref OrdersTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref OrdersTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /submitorder
            Method: post

  ###################################################
  # Order Processing Lambda (DynamoDB Stream -> SQS)
  ###################################################
  OrderProcessingFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: OrderProcessing
      CodeUri: ./OrderProcessing/
      Handler: OrderProcessing.lambda_handler
      Runtime: python3.12
      Environment:
        Variables:
          INVENTORY_TABLE: !Ref InventoryTable
          SQS_QUEUE_URL: !Ref OrdersQueue
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref InventoryTable
        - SQSSendMessagePolicy:
            QueueName: !GetAtt OrdersQueue.QueueName
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:DescribeStream
                - dynamodb:GetRecords
                - dynamodb:GetShardIterator
                - dynamodb:ListStreams
              Resource: !GetAtt OrdersTable.StreamArn
      Events:
        OrderStream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt OrdersTable.StreamArn
            StartingPosition: LATEST
            BatchSize: 1
            Enabled: true

  ###################################################
  # SQS Processor Lambda (Triggers Step Functions)
  ###################################################
  SQSProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SQSProcessor
      CodeUri: ./SQSProcessorFunction/
      Handler: sqsprocessor.lambda_handler
      Runtime: python3.12
      Environment:
        Variables:
          STATE_MACHINE_ARN: !Ref OrderWorkflow
      Policies:
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt OrderWorkflow.Name
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt OrdersQueue.Arn
            BatchSize: 1

  ###################################################
  # Payment Lambda
  ###################################################
  PaymentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PaymentProcessor
      CodeUri: ./payment/
      Handler: PaymentProcessor.lambda_handler
      Runtime: python3.12

  ###################################################
  # Shipping Lambda
  ###################################################
  ShippingFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ShippingProcessor
      CodeUri: ./shipping/
      Handler: ShippingProcessor.lambda_handler
      Runtime: python3.12

  ###################################################
  # Step Functions Workflow
  ###################################################
  OrderWorkflow:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: OrderWorkflow
      DefinitionString:
        Fn::Sub: |
          {
            "Comment": "Order Processing Workflow",
            "StartAt": "PaymentStep",
            "States": {
              "PaymentStep": {
                "Type": "Task",
                "Resource": "${PaymentFunction.Arn}",
                "Next": "ShippingStep"
              },
              "ShippingStep": {
                "Type": "Task",
                "Resource": "${ShippingFunction.Arn}",
                "End": true
              }
            }
          }
      RoleArn: !GetAtt OrderWorkflowRole.Arn

  ###################################################
  # Step Functions Role
  ###################################################
  OrderWorkflowRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: OrderWorkflowPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: "*"

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/submitorder"
  OrdersTableName:
    Description: "Orders Table Name"
    Value: !Ref OrdersTable
  InventoryTableName:
    Description: "Inventory Table Name"
    Value: !Ref InventoryTable
  OrdersQueueUrl:
    Description: "Orders Queue URL"
    Value: !Ref OrdersQueue
  StepFunctionArn:
    Description: "Step Function ARN"
    Value: !Ref OrderWorkflow
